<?xml version="1.0" encoding="UTF-8"?>
<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3
        http://maven.apache.org/xsd/assembly-1.1.3.xsd">
    <id>1.0</id>
    <formats>
        <!-- 这个是将下面的所有内容打成zip包里面的意思，生成文件位置在target下 -->
        <!-- 生成的默认格式为${artifactId}-${version}.zip -->
        <format>zip</format>
    </formats>
    <includeBaseDirectory>false</includeBaseDirectory>
    <!-- 打包想打的目录中的文件 -->
    <fileSets>
        <fileSet>
            <directory>src/main/resources</directory>
            <outputDirectory>/</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>libs204</directory>
            <outputDirectory>/</outputDirectory>
        </fileSet>
    </fileSets>
    <!-- 打包想打的文件 -->
    <files>
        <file>
            <!-- ${project.build.directory}这个是target目录 -->
            <!-- ${project.build.finalName}这个是该项目打的jar包名字，如果不确定就直接写死实际的文件名-->
            <source>${project.build.directory}/${project.build.finalName}.jar</source>
            <outputDirectory>/</outputDirectory>
            <!--输出的别名-->
            <destName>gdal2tiles.jar</destName>
        </file>
<!--        <file>-->
<!--            &lt;!&ndash; 路径是与pom.xml为参照，平级的直接写名字，如src，target等&ndash;&gt;-->
<!--            <source>keystore</source>-->
<!--            <outputDirectory>/</outputDirectory>-->
<!--            <destName>keystore-out</destName>-->
<!--        </file>-->
<!--        <file>-->
<!--            &lt;!&ndash; 路径是与pom.xml为参照，平级的直接写名字，如src，target等&ndash;&gt;-->
<!--            <source>pom.xml</source>-->
<!--            <outputDirectory>/</outputDirectory>-->
<!--            <destName>pom-out.xml</destName>-->
<!--        </file>-->
    </files>
    <!-- 打包想打的jar -->
    <dependencySets>
        <!-- 这个是打包自己的程序代码 -->
        <dependencySet>
            <outputDirectory>/</outputDirectory>
<!--            <includes>-->
<!--                &lt;!&ndash; 这个是pom中的groupId:artifactId:jar &ndash;&gt;-->
<!--                <include>com.scu.tgm.mavenpackge:test:jar</include>-->
<!--                &lt;!&ndash; 即使该依赖设置成provided也可以被打出来 &ndash;&gt;-->
<!--                <include>org.apache.poi:poi:jar</include>-->
<!--            </includes>-->
        </dependencySet>
        <!-- 这个是将依赖打包,如果不想打包某个依赖就在dependency中添加<scope>provided</scope> -->
        <dependencySet>
            <useProjectArtifact>false</useProjectArtifact>
            <outputDirectory>/lib</outputDirectory>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
            <unpack>false</unpack>
            <useTransitiveDependencies>false</useTransitiveDependencies>
            <!-- 打包运行时的jar -->
            <scope>runtime</scope>
        </dependencySet>
    </dependencySets>
</assembly>